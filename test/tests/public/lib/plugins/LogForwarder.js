test.method ("plugins.LogForwarder", "onUsePlugin", true)
    .should ("add log methods to the host class")
    .up (s => s.MainLogger = nit.defineClass ("MainLogger")
        .plugin ("logger")
    )
    .up (s => s.hostClass = nit.defineClass ("test.MyService")
        .property ("server", "MainLogger")
    )
    .up (s => s.args = [s.hostClass, new s.class ("server")])
    .mock ("MainLogger.prototype", "info")
    .after (s => s.service = new s.hostClass)
    .after (s => s.service.server = new s.MainLogger)
    .after (s => s.service.info ("my info"))
    .after (s => s.service.info (new Error ("err")))
    .expectingPropertyToBe ("mocks.0.invocations.length", 2)
    .expectingPropertyToBeOfType ("mocks.0.invocations.1.args.0", "Error")
    .commit ()
;
